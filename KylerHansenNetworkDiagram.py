#CS 2705
#Network Mapping with Python
#Kyler Hansen

import ipaddress


#need to create at least 11 subnets
ipInterface = ipaddress.ip_interface('138.191.0.0/16')
ipNetwork = ipInterface.network

print()
print()

colleges = (list(ipaddress.ip_network(ipNetwork).subnets(prefixlen_diff=4))) # I need 11 subnets so 2^4 is 16. I will use 4 bits.
print('Applied Science network address and subnet mask: ', colleges[0])
print('\t Valid host range: {0} - {1}'.format(((colleges[0].network_address)+1), (colleges[0].broadcast_address)-1)) #excludes the network address and broadcast addresses.
print()
print('Arts & Humanities network address and subnet mask: ', colleges[1])
print('\t Valid host range: {0} - {1}'.format(((colleges[1].network_address)+1), (colleges[1].broadcast_address)-1))
print()
print('Education network address and subnet mask: ', colleges[2])
print('\t Valid host range: {0} - {1}'.format(((colleges[2].network_address)+1), (colleges[2].broadcast_address)-1))
print()
print('Business & Economics network address and subnet mask: ', colleges[3])
print('\t Valid host range: {0} - {1}'.format(((colleges[3].network_address)+1), (colleges[3].broadcast_address)-1))
print()
print('Health network address and subnet mask: ', colleges[4])
print('\t Valid host range: {0} - {1}'.format(((colleges[4].network_address)+1), (colleges[4].broadcast_address)-1))
print()
print('Science network address and subnet mask: ', colleges[5])
print('\t Valid host range: {0} - {1}'.format(((colleges[5].network_address)+1), (colleges[5].broadcast_address)-1))
print()
print('Social & Behavioral Science network address and subnet mask: ', colleges[6])
print('\t Valid host range: {0} - {1}'.format(((colleges[6].network_address)+1), (colleges[6].broadcast_address)-1))
print()
print('Information Technology network address and subnet mask: ', colleges[7])
print('\t Valid host range: {0} - {1}'.format(((colleges[7].network_address)+1), (colleges[7].broadcast_address)-1))
print()
print('Student Affairs network address and subnet mask: ', colleges[8])
print('\t Valid host range: {0} - {1}'.format(((colleges[8].network_address)+1), (colleges[8].broadcast_address)-1))
print()
print('Facilities Management network address and subnet mask: ', colleges[9])
print('\t Valid host range: {0} - {1}'.format(((colleges[9].network_address)+1), (colleges[9].broadcast_address)-1))
print()
print('Administrative Services network address and subnet mask: ', colleges[10])
print('\t Valid host range: {0} - {1}'.format(((colleges[10].network_address)+1), (colleges[10].broadcast_address)-1))
print()
print()


#8 subnets for Applied Sciences 
print('===================================APPLIED SCIENCES=====================================')
print()
ipInterface = ipaddress.ip_interface(colleges[0]) #uses the first subnetwork from array colleges
ipNetwork = ipInterface.network
east = (list(ipaddress.ip_network(ipNetwork).subnets(prefixlen_diff=3))) # I need 8 subnets so 2^3 = 8.
print('\t Computer Science network address and subnet mask is: ', east[0])
print('\t\t Valid host range: {0} - {1}'.format(((east[0].network_address)+1), (east[0].broadcast_address)-1))
print()
print('\t Professional Sales network address and subnet mask is: ', east[1])
print('\t\t Valid host range: {0} - {1}'.format(((east[1].network_address)+1), (east[1].broadcast_address)-1))
print()
print('\t Manufacturing Engieering network address and subnet mask is: ', east[2])
print('\t\t Valid host range: {0} - {1}'.format(((east[2].network_address)+1), (east[2].broadcast_address)-1))
print()
print('\t Construction Management network address and subnet mask is: ', east[3])
print('\t\t Valid host range: {0} - {1}'.format(((east[3].network_address)+1), (east[3].broadcast_address)-1))
print()
print('\t Automotive Technology network address and subnet mask is: ', east[4])
print('\t\t Valid host range: {0} - {1}'.format(((east[4].network_address)+1), (east[4].broadcast_address)-1))
print()
print('\t Network Technology network address and subnet mask is: ', east[5])
print('\t\t Valid host range: {0} - {1}'.format(((east[5].network_address)+1), (east[5].broadcast_address)-1))
print()
print('\t Web Design network address and subnet mask is: ', east[6])
print('\t\t Valid host range: {0} - {1}'.format(((east[6].network_address)+1), (east[6].broadcast_address)-1))
print()
print('\t Engineering network address and subnet mask is: ', east[7])
print('\t\t Valid host range: {0} - {1}'.format(((east[7].network_address)+1), (east[7].broadcast_address)-1))
print()
print()

print('===================================ARTS & HUMANITIES=====================================')
print()
ipInterface = ipaddress.ip_interface(colleges[1]) #uses the first subnetwork from array colleges
ipNetwork = ipInterface.network
east = (list(ipaddress.ip_network(ipNetwork).subnets(prefixlen_diff=3))) # I need 8 subnets so 2^3 = 8.
print('\t Korean network address and subnet mask is: ', east[0])
print('\t\t Valid host range: {0} - {1}'.format(((east[0].network_address)+1), (east[0].broadcast_address)-1))
print()
print('\t German network address and subnet mask is: ', east[1])
print('\t\t Valid host range: {0} - {1}'.format(((east[1].network_address)+1), (east[1].broadcast_address)-1))
print()
print('\t Spanish network address and subnet mask is: ', east[2])
print('\t\t Valid host range: {0} - {1}'.format(((east[2].network_address)+1), (east[2].broadcast_address)-1))
print()
print('\t French network address and subnet mask is: ', east[3])
print('\t\t Valid host range: {0} - {1}'.format(((east[3].network_address)+1), (east[3].broadcast_address)-1))
print()
print('\t English network address and subnet mask is: ', east[4])
print('\t\t Valid host range: {0} - {1}'.format(((east[4].network_address)+1), (east[4].broadcast_address)-1))
print()
print('\t Visual Arts network address and subnet mask is: ', east[5])
print('\t\t Valid host range: {0} - {1}'.format(((east[5].network_address)+1), (east[5].broadcast_address)-1))
print()
print('\t Performing Arts network address and subnet mask is: ', east[6])
print('\t\t Valid host range: {0} - {1}'.format(((east[6].network_address)+1), (east[6].broadcast_address)-1))
print()
print('\t Communications network address and subnet mask is: ', east[7])
print('\t\t Valid host range: {0} - {1}'.format(((east[7].network_address)+1), (east[7].broadcast_address)-1))
print()
print()

print('===================================EDUCATION=====================================')
print()
ipInterface = ipaddress.ip_interface(colleges[2]) #uses the subnetwork from array colleges
ipNetwork = ipInterface.network
east = (list(ipaddress.ip_network(ipNetwork).subnets(prefixlen_diff=3))) # I need 8 subnets so 2^3 = 8.
print('\t Child and Family Studies network address and subnet mask is: ', east[0])
print('\t\t Valid host range: {0} - {1}'.format(((east[0].network_address)+1), (east[0].broadcast_address)-1))
print()
print('\t Health Promotion network address and subnet mask is: ', east[1])
print('\t\t Valid host range: {0} - {1}'.format(((east[1].network_address)+1), (east[1].broadcast_address)-1))
print()
print('\t Athletic Training network address and subnet mask is: ', east[2])
print('\t\t Valid host range: {0} - {1}'.format(((east[2].network_address)+1), (east[2].broadcast_address)-1))
print()
print('\t Human Performance network address and subnet mask is: ', east[3])
print('\t\t Valid host range: {0} - {1}'.format(((east[3].network_address)+1), (east[3].broadcast_address)-1))
print()
print('\t Teacher Education network address and subnet mask is: ', east[4])
print('\t\t Valid host range: {0} - {1}'.format(((east[4].network_address)+1), (east[4].broadcast_address)-1))
print()
print('\t Exercise Physiology network address and subnet mask is: ', east[5])
print('\t\t Valid host range: {0} - {1}'.format(((east[5].network_address)+1), (east[5].broadcast_address)-1))
print()
print('\t Health Education network address and subnet mask is: ', east[6])
print('\t\t Valid host range: {0} - {1}'.format(((east[6].network_address)+1), (east[6].broadcast_address)-1))
print()
print('\t Recreation Management network address and subnet mask is: ', east[7])
print('\t\t Valid host range: {0} - {1}'.format(((east[7].network_address)+1), (east[7].broadcast_address)-1))
print()
print()

print('===================================BUSINESS & ECONOMICS=====================================')
print()
ipInterface = ipaddress.ip_interface(colleges[3]) #uses the subnetwork from array colleges
ipNetwork = ipInterface.network
east = (list(ipaddress.ip_network(ipNetwork).subnets(prefixlen_diff=3))) # I need 8 subnets so 2^3 = 8.
print('\t Business Administration network address and subnet mask is: ', east[0])
print('\t\t Valid host range: {0} - {1}'.format(((east[0].network_address)+1), (east[0].broadcast_address)-1))
print()
print('\t Economics network address and subnet mask is: ', east[1])
print('\t\t Valid host range: {0} - {1}'.format(((east[1].network_address)+1), (east[1].broadcast_address)-1))
print()
print('\t Information Systems Tech network address and subnet mask is: ', east[2])
print('\t\t Valid host range: {0} - {1}'.format(((east[2].network_address)+1), (east[2].broadcast_address)-1))
print()
print('\t Master of Business Admin network address and subnet mask is: ', east[3])
print('\t\t Valid host range: {0} - {1}'.format(((east[3].network_address)+1), (east[3].broadcast_address)-1))
print()
print('\t Accounting network address and subnet mask is: ', east[4])
print('\t\t Valid host range: {0} - {1}'.format(((east[4].network_address)+1), (east[4].broadcast_address)-1))
print()
print('\t Business Education network address and subnet mask is: ', east[5])
print('\t\t Valid host range: {0} - {1}'.format(((east[5].network_address)+1), (east[5].broadcast_address)-1))
print()
print('\t Mastery of Accountancy network address and subnet mask is: ', east[6])
print('\t\t Valid host range: {0} - {1}'.format(((east[6].network_address)+1), (east[6].broadcast_address)-1))
print()
print('\t Master of Taxation network address and subnet mask is: ', east[7])
print('\t\t Valid host range: {0} - {1}'.format(((east[7].network_address)+1), (east[7].broadcast_address)-1))
print()
print()

print('===================================HEALTH=====================================')
print()
ipInterface = ipaddress.ip_interface(colleges[4]) #uses the first subnetwork from array colleges
ipNetwork = ipInterface.network
east = (list(ipaddress.ip_network(ipNetwork).subnets(prefixlen_diff=3))) # I need 8 subnets so 2^3 = 8.
print('\t Dental Hygiene network address and subnet mask is: ', east[0])
print('\t\t Valid host range: {0} - {1}'.format(((east[0].network_address)+1), (east[0].broadcast_address)-1))
print()
print('\t Emergency Care network address and subnet mask is: ', east[1])
print('\t\t Valid host range: {0} - {1}'.format(((east[1].network_address)+1), (east[1].broadcast_address)-1))
print()
print('\t Health Information Managment network address and subnet mask is: ', east[2])
print('\t\t Valid host range: {0} - {1}'.format(((east[2].network_address)+1), (east[2].broadcast_address)-1))
print()
print('\t Nursing network address and subnet mask is: ', east[3])
print('\t\t Valid host range: {0} - {1}'.format(((east[3].network_address)+1), (east[3].broadcast_address)-1))
print()
print('\t Medical Laboratory network address and subnet mask is: ', east[4])
print('\t\t Valid host range: {0} - {1}'.format(((east[4].network_address)+1), (east[4].broadcast_address)-1))
print()
print('\t Radiology network address and subnet mask is: ', east[5])
print('\t\t Valid host range: {0} - {1}'.format(((east[5].network_address)+1), (east[5].broadcast_address)-1))
print()
print('\t Respiratory Therapy network address and subnet mask is: ', east[6])
print('\t\t Valid host range: {0} - {1}'.format(((east[6].network_address)+1), (east[6].broadcast_address)-1))
print()
print('\t Occupational Therapy network address and subnet mask is: ', east[7])
print('\t\t Valid host range: {0} - {1}'.format(((east[7].network_address)+1), (east[7].broadcast_address)-1))
print()
print()


print('===================================SCIENCE=====================================')
print()
ipInterface = ipaddress.ip_interface(colleges[5]) #uses the first subnetwork from array colleges
ipNetwork = ipInterface.network
east = (list(ipaddress.ip_network(ipNetwork).subnets(prefixlen_diff=3))) # I need 8 subnets so 2^3 = 8.
print('\t Botany network address and subnet mask is: ', east[0])
print('\t\t Valid host range: {0} - {1}'.format(((east[0].network_address)+1), (east[0].broadcast_address)-1))
print()
print('\t Geosciences network address and subnet mask is: ', east[1])
print('\t\t Valid host range: {0} - {1}'.format(((east[1].network_address)+1), (east[1].broadcast_address)-1))
print()
print('\t Microbiology network address and subnet mask is: ', east[2])
print('\t\t Valid host range: {0} - {1}'.format(((east[2].network_address)+1), (east[2].broadcast_address)-1))
print()
print('\t Developmental Math network address and subnet mask is: ', east[3])
print('\t\t Valid host range: {0} - {1}'.format(((east[3].network_address)+1), (east[3].broadcast_address)-1))
print()
print('\t Physics network address and subnet mask is: ', east[4])
print('\t\t Valid host range: {0} - {1}'.format(((east[4].network_address)+1), (east[4].broadcast_address)-1))
print()
print('\t Zoology network address and subnet mask is: ', east[5])
print('\t\t Valid host range: {0} - {1}'.format(((east[5].network_address)+1), (east[5].broadcast_address)-1))
print()
print('\t Mathematics network address and subnet mask is: ', east[6])
print('\t\t Valid host range: {0} - {1}'.format(((east[6].network_address)+1), (east[6].broadcast_address)-1))
print()
print('\t Human Anatomy Physiology network address and subnet mask is: ', east[7])
print('\t\t Valid host range: {0} - {1}'.format(((east[7].network_address)+1), (east[7].broadcast_address)-1))
print()
print()

print('===================================SOCIAL & BEHAVIORAL SCIENCE=====================================')
print()
ipInterface = ipaddress.ip_interface(colleges[6]) #uses the first subnetwork from array colleges
ipNetwork = ipInterface.network
east = (list(ipaddress.ip_network(ipNetwork).subnets(prefixlen_diff=3))) # I need 8 subnets so 2^3 = 8.
print('\t Criminal Justice network address and subnet mask is: ', east[0])
print('\t\t Valid host range: {0} - {1}'.format(((east[0].network_address)+1), (east[0].broadcast_address)-1))
print()
print('\t Geography network address and subnet mask is: ', east[1])
print('\t\t Valid host range: {0} - {1}'.format(((east[1].network_address)+1), (east[1].broadcast_address)-1))
print()
print('\t History network address and subnet mask is: ', east[2])
print('\t\t Valid host range: {0} - {1}'.format(((east[2].network_address)+1), (east[2].broadcast_address)-1))
print()
print('\t Military Science network address and subnet mask is: ', east[3])
print('\t\t Valid host range: {0} - {1}'.format(((east[3].network_address)+1), (east[3].broadcast_address)-1))
print()
print('\t Philosophy & Political Science network address and subnet mask is: ', east[4])
print('\t\t Valid host range: {0} - {1}'.format(((east[4].network_address)+1), (east[4].broadcast_address)-1))
print()
print('\t Psychology network address and subnet mask is: ', east[5])
print('\t\t Valid host range: {0} - {1}'.format(((east[5].network_address)+1), (east[5].broadcast_address)-1))
print()
print('\t Social Work network address and subnet mask is: ', east[6])
print('\t\t Valid host range: {0} - {1}'.format(((east[6].network_address)+1), (east[6].broadcast_address)-1))
print()
print('\t Sociology & Athropology network address and subnet mask is: ', east[7])
print('\t\t Valid host range: {0} - {1}'.format(((east[7].network_address)+1), (east[7].broadcast_address)-1))
print()
print()

print('===================================INFORMATION TECHNOLOGY=====================================')
print()
ipInterface = ipaddress.ip_interface(colleges[7]) #uses the first subnetwork from array colleges
ipNetwork = ipInterface.network
east = (list(ipaddress.ip_network(ipNetwork).subnets(prefixlen_diff=3))) # I need 8 subnets so 2^3 = 8.
print('\t Computing Support network address and subnet mask is: ', east[0])
print('\t\t Valid host range: {0} - {1}'.format(((east[0].network_address)+1), (east[0].broadcast_address)-1))
print()
print('\t Telecommunications network address and subnet mask is: ', east[1])
print('\t\t Valid host range: {0} - {1}'.format(((east[1].network_address)+1), (east[1].broadcast_address)-1))
print()
print('\t Administrative Computing network address and subnet mask is: ', east[2])
print('\t\t Valid host range: {0} - {1}'.format(((east[2].network_address)+1), (east[2].broadcast_address)-1))
print()
print('\t Networking network address and subnet mask is: ', east[3])
print('\t\t Valid host range: {0} - {1}'.format(((east[3].network_address)+1), (east[3].broadcast_address)-1))
print()
print('\t Academic Computing network address and subnet mask is: ', east[4])
print('\t\t Valid host range: {0} - {1}'.format(((east[4].network_address)+1), (east[4].broadcast_address)-1))
print()
print('\t Computer Security network address and subnet mask is: ', east[5])
print('\t\t Valid host range: {0} - {1}'.format(((east[5].network_address)+1), (east[5].broadcast_address)-1))
print()
print('\t Database Administration network address and subnet mask is: ', east[6])
print('\t\t Valid host range: {0} - {1}'.format(((east[6].network_address)+1), (east[6].broadcast_address)-1))
print()
print('\t VP of IT Office network address and subnet mask is: ', east[7])
print('\t\t Valid host range: {0} - {1}'.format(((east[7].network_address)+1), (east[7].broadcast_address)-1))
print()
print()

print('===================================STUDENT AFFAIRS=====================================')
print()
ipInterface = ipaddress.ip_interface(colleges[8]) #uses the first subnetwork from array colleges
ipNetwork = ipInterface.network
east = (list(ipaddress.ip_network(ipNetwork).subnets(prefixlen_diff=3))) # I need 8 subnets so 2^3 = 8.
print('\t Student Life network address and subnet mask is: ', east[0])
print('\t\t Valid host range: {0} - {1}'.format(((east[0].network_address)+1), (east[0].broadcast_address)-1))
print()
print('\t Student Services network address and subnet mask is: ', east[1])
print('\t\t Valid host range: {0} - {1}'.format(((east[1].network_address)+1), (east[1].broadcast_address)-1))
print()
print('\t Outreach network address and subnet mask is: ', east[2])
print('\t\t Valid host range: {0} - {1}'.format(((east[2].network_address)+1), (east[2].broadcast_address)-1))
print()
print('\t Academic Support network address and subnet mask is: ', east[3])
print('\t\t Valid host range: {0} - {1}'.format(((east[3].network_address)+1), (east[3].broadcast_address)-1))
print()
print('\t Focused Interest network address and subnet mask is: ', east[4])
print('\t\t Valid host range: {0} - {1}'.format(((east[4].network_address)+1), (east[4].broadcast_address)-1))
print()
print('\t Career Services network address and subnet mask is: ', east[5])
print('\t\t Valid host range: {0} - {1}'.format(((east[5].network_address)+1), (east[5].broadcast_address)-1))
print()
print('\t Veterans Affairs network address and subnet mask is: ', east[6])
print('\t\t Valid host range: {0} - {1}'.format(((east[6].network_address)+1), (east[6].broadcast_address)-1))
print()
print('\t Diversity network address and subnet mask is: ', east[7])
print('\t\t Valid host range: {0} - {1}'.format(((east[7].network_address)+1), (east[7].broadcast_address)-1))
print()
print()

print('===================================FACILITIES MANAGEMENT=====================================')
print()
ipInterface = ipaddress.ip_interface(colleges[9]) #uses the first subnetwork from array colleges
ipNetwork = ipInterface.network
east = (list(ipaddress.ip_network(ipNetwork).subnets(prefixlen_diff=3))) # I need 8 subnets so 2^3 = 8.
print('\t Campus planning network address and subnet mask is: ', east[0])
print('\t\t Valid host range: {0} - {1}'.format(((east[0].network_address)+1), (east[0].broadcast_address)-1))
print()
print('\t Construction network address and subnet mask is: ', east[1])
print('\t\t Valid host range: {0} - {1}'.format(((east[1].network_address)+1), (east[1].broadcast_address)-1))
print()
print('\t Custodial network address and subnet mask is: ', east[2])
print('\t\t Valid host range: {0} - {1}'.format(((east[2].network_address)+1), (east[2].broadcast_address)-1))
print()
print('\t Landscaping network address and subnet mask is: ', east[3])
print('\t\t Valid host range: {0} - {1}'.format(((east[3].network_address)+1), (east[3].broadcast_address)-1))
print()
print('\t Electrical network address and subnet mask is: ', east[4])
print('\t\t Valid host range: {0} - {1}'.format(((east[4].network_address)+1), (east[4].broadcast_address)-1))
print()
print('\t Mechanical network address and subnet mask is: ', east[5])
print('\t\t Valid host range: {0} - {1}'.format(((east[5].network_address)+1), (east[5].broadcast_address)-1))
print()
print('\t Business Services network address and subnet mask is: ', east[6])
print('\t\t Valid host range: {0} - {1}'.format(((east[6].network_address)+1), (east[6].broadcast_address)-1))
print()
print('\t Parking Services network address and subnet mask is: ', east[7])
print('\t\t Valid host range: {0} - {1}'.format(((east[7].network_address)+1), (east[7].broadcast_address)-1))
print()
print()

print('===================================ADMINISTRATIVE SERVICES=====================================')
print()
ipInterface = ipaddress.ip_interface(colleges[10]) #uses the first subnetwork from array colleges
ipNetwork = ipInterface.network
east = (list(ipaddress.ip_network(ipNetwork).subnets(prefixlen_diff=3))) # I need 8 subnets so 2^3 = 8.
print('\t Athletics network address and subnet mask is: ', east[0])
print('\t\t Valid host range: {0} - {1}'.format(((east[0].network_address)+1), (east[0].broadcast_address)-1))
print()
print('\t Accounting network address and subnet mask is: ', east[1])
print('\t\t Valid host range: {0} - {1}'.format(((east[1].network_address)+1), (east[1].broadcast_address)-1))
print()
print('\t Budget network address and subnet mask is: ', east[2])
print('\t\t Valid host range: {0} - {1}'.format(((east[2].network_address)+1), (east[2].broadcast_address)-1))
print()
print('\t Enviro Health & Safety network address and subnet mask is: ', east[3])
print('\t\t Valid host range: {0} - {1}'.format(((east[3].network_address)+1), (east[3].broadcast_address)-1))
print()
print('\t Printing network address and subnet mask is: ', east[4])
print('\t\t Valid host range: {0} - {1}'.format(((east[4].network_address)+1), (east[4].broadcast_address)-1))
print()
print('\t Human Resources network address and subnet mask is: ', east[5])
print('\t\t Valid host range: {0} - {1}'.format(((east[5].network_address)+1), (east[5].broadcast_address)-1))
print()
print('\t Purchasing network address and subnet mask is: ', east[6])
print('\t\t Valid host range: {0} - {1}'.format(((east[6].network_address)+1), (east[6].broadcast_address)-1))
print()
print('\t Police & Security network address and subnet mask is: ', east[7])
print('\t\t Valid host range: {0} - {1}'.format(((east[7].network_address)+1), (east[7].broadcast_address)-1))
print()
print()